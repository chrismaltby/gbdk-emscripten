                              1 	.include	"global.s"
                    0001      1 	.NEAR_CALLS = 1         ; <near_calls> - tag so that sed can change this
                              2         
                              3 	;; Changed by astorgb.pl to 1
                    0000      4 	__RGBDS__	= 0
                              5 
                              6 	
                              7 	;;  Screen dimensions 
                    0013      8 	.MAXCURSPOSX	= 0x13	; In tiles
                    0011      9 	.MAXCURSPOSY	= 0x11
                             10 
                    0080     11 	.START		= 0x80
                    0040     12 	.SELECT		= 0x40
                    0020     13 	.B		= 0x20
                    0010     14 	.A		= 0x10
                    0008     15 	.DOWN		= 0x08
                    0004     16 	.UP		= 0x04
                    0002     17 	.LEFT		= 0x02
                    0001     18 	.RIGHT		= 0x01
                             19 
                    00A0     20 	.SCREENWIDTH	= 0xA0
                    0090     21 	.SCREENHEIGHT	= 0x90
                    0007     22 	.MINWNDPOSX	= 0x07
                    0000     23 	.MINWNDPOSY	= 0x00
                    00A6     24 	.MAXWNDPOSX	= 0xA6
                    008F     25 	.MAXWNDPOSY	= 0x8F
                             26 
                    0001     27 	.VBL_IFLAG	= 0x01
                    0002     28 	.LCD_IFLAG	= 0x02
                    0004     29 	.TIM_IFLAG	= 0x04
                    0008     30 	.SIO_IFLAG	= 0x08
                    0010     31 	.JOY_IFLAG	= 0x10
                             32  
                    0000     33 	.P1		= 0x00	; Joystick: 1.1.P15.P14.P13.P12.P11.P10
                    0001     34 	.SB		= 0x01	; Serial IO data buffer
                    0002     35 	.SC		= 0x02	; Serial IO control register
                    0004     36 	.DIV		= 0x04	; Divider register
                    0005     37 	.TIMA		= 0x05	; Timer counter
                    0006     38 	.TMA		= 0x06	; Timer modulo
                    0007     39 	.TAC		= 0x07	; Timer control
                    000F     40 	.IF		= 0x0F	; Interrupt flags: 0.0.0.JST.SIO.TIM.LCD.VBL
                    0010     41 	.NR10		= 0x10	; Sound register
                    0011     42 	.NR11		= 0x11	; Sound register
                    0012     43 	.NR12		= 0x12	; Sound register
                    0013     44 	.NR13		= 0x13	; Sound register
                    0014     45 	.NR14		= 0x14	; Sound register
                    0016     46 	.NR21		= 0x16	; Sound register
                    0017     47 	.NR22		= 0x17	; Sound register
                    0018     48 	.NR23		= 0x18	; Sound register
                    0019     49 	.NR24		= 0x19	; Sound register
                    001A     50 	.NR30		= 0x1A	; Sound register
                    001B     51 	.NR31		= 0x1B	; Sound register
                    001C     52 	.NR32		= 0x1C	; Sound register
                    001D     53 	.NR33		= 0x1D	; Sound register
                    001E     54 	.NR34		= 0x1E	; Sound register
                    0020     55 	.NR41		= 0x20	; Sound register
                    0021     56 	.NR42		= 0x21	; Sound register
                    0022     57 	.NR43		= 0x22	; Sound register
                    0023     58 	.NR44		= 0x23	; Sound register
                    0024     59 	.NR50		= 0x24	; Sound register
                    0025     60 	.NR51		= 0x25	; Sound register
                    0026     61 	.NR52		= 0x26	; Sound register
                    0040     62 	.LCDC		= 0x40	; LCD control
                    0041     63 	.STAT		= 0x41	; LCD status
                    0042     64 	.SCY		= 0x42	; Scroll Y
                    0043     65 	.SCX		= 0x43	; Scroll X
                    0044     66 	.LY		= 0x44	; LCDC Y-coordinate
                    0045     67 	.LYC		= 0x45	; LY compare
                    0046     68 	.DMA		= 0x46	; DMA transfer
                    0047     69 	.BGP		= 0x47	; BG palette data
                    0048     70 	.OBP0		= 0x48	; OBJ palette 0 data
                    0049     71 	.OBP1		= 0x49	; OBJ palette 1 data
                    004A     72 	.WY		= 0x4A	; Window Y coordinate
                    004B     73 	.WX		= 0x4B	; Window X coordinate
                    004D     74 	.KEY1		= 0x4D	; CPU speed
                    004F     75 	.VBK		= 0x4F	; VRAM bank
                    0051     76 	.HDMA1		= 0x51	; DMA control 1
                    0052     77 	.HDMA2		= 0x52	; DMA control 2
                    0053     78 	.HDMA3		= 0x53	; DMA control 3
                    0054     79 	.HDMA4		= 0x54	; DMA control 4
                    0055     80 	.HDMA5		= 0x55	; DMA control 5
                    0056     81 	.RP		= 0x56	; IR port
                    0068     82 	.BCPS		= 0x68	; BG color palette specification
                    0069     83 	.BCPD		= 0x69	; BG color palette data
                    006A     84 	.OCPS		= 0x6A	; OBJ color palette specification
                    006B     85 	.OCPD		= 0x6B	; OBJ color palette data
                    0070     86 	.SVBK		= 0x70	; WRAM bank
                    00FF     87 	.IE		= 0xFF	; Interrupt enable
                             88 
                    0001     89 	.G_MODE		= 0x01	; Graphic mode
                    0002     90 	.T_MODE		= 0x02	; Text mode (bit 2)
                    0002     91 	.T_MODE_OUT	= 0x02	; Text mode output only
                    0003     92 	.T_MODE_INOUT	= 0x03	; Text mode with input
                    0004     93 	.M_NO_SCROLL	= 0x04	; Disables scrolling of the screen in text mode
                    0008     94 	.M_NO_INTERP	= 0x08	; Disables special character interpretation
                             95 
                    2000     96 	.MBC1_ROM_PAGE	= 0x2000 ; Address to write to for MBC1 switching
                             97 	
                             98 	;; Status codes for IO
                    0000     99 	.IO_IDLE	= 0x00
                    0001    100 	.IO_SENDING	= 0x01
                    0002    101 	.IO_RECEIVING	= 0x02
                    0004    102 	.IO_ERROR	= 0x04
                            103 
                            104 	;; Type of IO data
                    0066    105 	.DT_IDLE	= 0x66
                    0055    106 	.DT_RECEIVING	= 0x55
                            107 
                            108 	;; Table of routines for modes
                    01E0    109 	.MODE_TABLE	= 0x01E0
                            110 
                            111 	;; C related
                            112 	;; Overheap of a banked call.  Used for parameters
                            113 	;;  = ret + real ret + bank
                            114 
                    0001    115 	.if .NEAR_CALLS
                    0002    116 	.BANKOV		= 2
                            117 
                            118 	.else
                            119 	.BANKOV		= 6
                            120 
                            121 	.endif
                            122 	
                            123 	.globl	banked_call
                            124 	.globl	banked_ret
                            125 	
                            126 	;; Global variables
                            127 	.globl	.mode
                            128 
                            129 	.globl	__cpu
                            130 
                            131 	.globl	__io_out
                            132 	.globl	__io_in
                            133 	.globl	__io_status
                            134 
                            135 	;; Global routines
                            136 	.globl	.set_mode
                            137 
                            138 	.globl	.reset
                            139 
                            140 	.globl	.display_off
                            141 
                            142 	.globl	.wait_vbl_done
                            143 
                            144 	;; Interrupt routines 
                            145 	.globl	.add_VBL
                            146 	.globl	.add_LCD
                            147 	.globl	.add_TIM
                            148 	.globl	.add_SIO
                            149 	.globl	.add_JOY
                            150 
                            151 	;; Symbols defined at link time
                            152 	.globl	.STACK
                            153 	.globl	.OAM
                            154 	.globl	.refresh_OAM
                            155 
                            156 	;; Initialization routine   
                            157 	.globl	.init
                            158 
                            159 	;; Main user routine	
                            160 	.globl	_main
                              2 
                              3 	;; BANKED:	checked
                              4 	.area	_BASE
                              5 
                              6 	;; Wait until all buttons have been released
   0000                       7 .padup::
   0000                       8 _waitpadup::
   0000 F5                    9 	PUSH	AF		; Save modified registers
   0001 C5                   10 	PUSH	BC
   0002                      11 1$:
   0002 06 FF                12 	LD	B,#0xFF
   0004                      13 2$:
   0004 CDr10s00             14 	CALL	.jpad
   0007 B7                   15 	OR	A		; Have all buttons been released?
   0008 20 F8                16 	JR	NZ,1$		; Not yet
                             17 
   000A 05                   18 	DEC	B
   000B 20 F7                19 	JR	NZ,2$
   000D C1                   20 	POP	BC		; Restore registers
   000E F1                   21 	POP	AF
   000F C9                   22 	RET
                             23 
                             24 	;; Get Keypad Button Status
                             25 	;; The following bits are set if pressed:
                             26 	;;   0x80 - Start   0x08 - Down
                             27 	;;   0x40 - Select  0x04 - Up
                             28 	;;   0x20 - B	    0x02 - Left
                             29 	;;   0x10 - A	    0x01 - Right
   0010                      30 .jpad::
   0010 C5                   31 	PUSH	BC		; Save modified registers
   0011 3E 20                32 	LD	A,#0x20
   0013 E0 00                33 	LDH	(.P1),A		; Turn on P15
                             34 
   0015 F0 00                35 	LDH	A,(.P1)		; Delay
   0017 F0 00                36 	LDH	A,(.P1)
   0019 2F                   37 	CPL
   001A E6 0F                38 	AND	#0x0F
   001C CB 37                39 	SWAP	A
   001E 47                   40 	LD	B,A
   001F 3E 10                41 	LD	A,#0x10
   0021 E0 00                42 	LDH	(.P1),A		; Turn on P14
   0023 F0 00                43 	LDH	A,(.P1)		; Delay
   0025 F0 00                44 	LDH	A,(.P1)
   0027 F0 00                45 	LDH	A,(.P1)
   0029 F0 00                46 	LDH	A,(.P1)
   002B F0 00                47 	LDH	A,(.P1)
   002D F0 00                48 	LDH	A,(.P1)
   002F 2F                   49 	CPL
   0030 E6 0F                50 	AND	#0x0F
   0032 B0                   51 	OR	B
   0033 CB 37                52 	SWAP	A
   0035 47                   53 	LD	B,A
   0036 3E 30                54 	LD	A,#0x30
   0038 E0 00                55 	LDH	(.P1),A		; Turn off P14 and P15 (reset joypad)
   003A 78                   56 	LD	A,B
   003B C1                   57 	POP	BC		; Restore registers
   003C C9                   58 	RET
                             59 
                             60 	;; Wait for the key in B to be pressed
   003D                      61 .wait_pad::
   003D                      62 1$:
   003D CDr10s00             63 	CALL	.jpad		; Read pad
   0040 A0                   64 	AND	B		; Compare with mask?
   0041 28 FA                65 	JR	Z,1$		; Loop if no intersection
   0043 C9                   66 	RET
                             67 
   0044                      68 _joypad::
   0044 CDr10s00             69 	CALL	.jpad
   0047 5F                   70 	LD	E,A		; Return result in DE
   0048 C9                   71 	RET
                             72 
   0049                      73 _waitpad::
   0049 C5                   74 	PUSH	BC
   004A F8 04                75 	LDA	HL,4(SP)	; Skip return address and registers
   004C 46                   76 	LD	B,(HL)
   004D CDr3Ds00             77 	CALL	.wait_pad
   0050 5F                   78 	LD	E,A		; Return result in DE
   0051 C1                   79 	POP	BC
   0052 C9                   80 	RET
